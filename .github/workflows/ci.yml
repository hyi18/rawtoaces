# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CI
permissions:
  contents: read

on:
  push:
    #branches: [ "master" ]
  pull_request:
    #branches: [ "master" ]

jobs:
  aswf:
    name: "VFX${{ matrix.vfxyear }} ${{ matrix.compiler[0] }}"
    permissions: read-all
    uses: ./.github/workflows/build-steps.yml
    with:
      container: ${{ matrix.container }}
      container_volumes: ${{ matrix.container_volumes || '[]' }}
      cc_compiler: ${{ matrix.compiler[0] }}
      cxx_compiler: ${{ matrix.cxx_compiler[1] }}
      vfxyear: ${{ matrix.vfxyear || 0 }}
      ceres_hack: ${{ matrix.ceres_hack || 'OFF' }}
      test_install: ${{ matrix.test_install || 'ON' }}
      
    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      
      matrix:
        vfxyear: [ 2022, 2023, 2024 ]
        compiler: [ [gcc, g++], [clang, clang++] ]
        include:
          - vfxyear: 2022
            container: aswf/ci-osl:2022-clang13
            container_volumes: '["/node20217:/node20217:rw,rshared", "/node20217:/__e/node20:ro,rshared]"]'
            ceres_hack: 'ON'
            test_install: 'OFF'
          - vfxyear: 2023
            container: aswf/ci-osl:2023-clang15
          - vfxyear: 2024
            container: aswf/ci-osl:2024-clang17

  build:
    name: "${{matrix.os}} ${{matrix.c_compiler}}"
    permissions: read-all
    uses: ./.github/workflows/build-steps.yml
    with:
      runner: ${{ matrix.os }}
      container: ${{ matrix.container }}
      cc_compiler: ${{ matrix.cc_compiler }}
      cxx_compiler: ${{ matrix.cxx_compiler }}
      install_deps: ${{ matrix.install_deps }}
      toolchain_file: ${{ matrix.toolchain_file }}
      build_shared_libs: ${{ matrix.build_shared_libs || 'ON' }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            install_deps: install_deps_windows
            toolchain_file: "C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
            build_shared_libs: OFF
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            install_deps: install_deps_linux
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            install_deps: install_deps_linux
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            install_deps: install_deps_mac
